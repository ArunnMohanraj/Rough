{"version":3,"sources":["components/Header.jsx","components/Note.jsx","components/CreateArea.jsx","App.js","index.js"],"names":["Header","Note","props","className","title","content","Zoom","in","Fab","size","onClick","onDelete","CreateArea","useState","isClicked","setIsClicked","note","setNote","handleChange","event","target","name","value","prevNote","onChange","placeholder","rows","onAdd","preventDefault","newNote","Axios","post","App","useEffect","fetch","then","response","json","data","setNotes","notes","deleteNote","remNote","map","noteItem","index","id","ReactDOM","render","document","getElementById"],"mappings":"oLAaeA,MAVf,WACE,OACE,iCACE,+BACE,cAAC,IAAD,IADF,oB,iCCiBSC,MAlBf,SAAcC,GAKZ,OACE,sBAAKC,UAAU,OAAf,UACE,6BAAKD,EAAME,QACX,4BAAIF,EAAMG,UACV,cAACC,EAAA,EAAD,CAAMC,IAAI,EAAV,SACE,cAACC,EAAA,EAAD,CAAKC,KAAK,QAAQC,QATxB,WACER,EAAMS,SAAST,EAAME,QAQjB,SACE,cAAC,IAAD,Y,gCCwDKQ,MAlEf,SAAoBV,GAClB,MAAkCW,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwBF,mBAAS,CAC/BT,MAAO,GACPC,QAAS,KAFX,mBAAOW,EAAP,KAAaC,EAAb,KAKA,SAASC,EAAaC,GACpB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEdL,GAAQ,SAACM,GACP,OAAO,2BACFA,GADL,kBAEGF,EAAOC,OAwBd,OACE,8BACE,uBAAMnB,UAAU,cAAhB,UACGW,EACC,uBACEO,KAAK,QACLG,SAAUN,EACVI,MAAON,EAAKZ,MACZqB,YAAY,UAEZ,KACJ,0BACEJ,KAAK,UACLX,QAjBR,WACEK,GAAa,IAiBPS,SAAUN,EACVI,MAAON,EAAKX,QACZoB,YAAaX,EAAY,UAAY,iBACrCY,KAAMZ,EAAY,EAAI,IAExB,cAACR,EAAA,EAAD,CAAMC,GAAIO,EAAV,SACE,cAACN,EAAA,EAAD,CAAKE,QAvCb,SAAoBS,GAClBjB,EAAMyB,MAAMX,GACZC,EAAQ,CACNb,MAAO,GACPC,QAAS,KAEXc,EAAMS,iBAEN,IAAMC,EAAS,CACbzB,MAAOY,EAAKZ,MACZC,QAASW,EAAKX,SAGZyB,IAAMC,KAAK,iDAAiDF,IA0B1D,SACE,cAAC,IAAD,cCpBGG,MAtCf,WAEEC,qBAAU,WACVC,MAAM,mDACPC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIC,EAASD,SAGrB,MAA0BzB,mBAAS,IAAnC,mBAAO2B,EAAP,KAAcD,EAAd,KAIA,SAASE,EAAWrC,GACjB,IAAMsC,EAAS,CACbtC,SAEJ0B,IAAMC,KAAK,mDAAmDW,GAG/D,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAYf,MAZhB,SAAiBW,OAaZE,EAAMG,KAAI,SAACC,EAAUC,GACpB,OACE,cAAC,EAAD,CAEEC,GAAID,EACJzC,MAAOwC,EAASxC,MAChBC,QAASuC,EAASvC,QAClBM,SAAU8B,GAJLI,UC5BjBE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6378425c.chunk.js","sourcesContent":["import React from \"react\";\nimport EventNoteOutlinedIcon from \"@material-ui/icons/EventNoteOutlined\";\n\nfunction Header() {\n  return (\n    <header>\n      <h1>\n        <EventNoteOutlinedIcon /> Rough Note\n      </h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nfunction Note(props) {\n  function handleClick() {\n    props.onDelete(props.title);\n  }\n\n  return (\n    <div className=\"note\">\n      <h1>{props.title}</h1>\n      <p>{props.content}</p>\n      <Zoom in={true}>\n        <Fab size=\"small\" onClick={handleClick}>\n          <DeleteForeverIcon />\n        </Fab>\n      </Zoom>\n    </div>\n  );\n}\n\nexport default Note;\n","import React, { useState } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport Axios from \"axios\";\n\nfunction CreateArea(props) {\n  const [isClicked, setIsClicked] = useState(false);\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n\n    setNote((prevNote) => {\n      return {\n        ...prevNote,\n        [name]: value\n      };\n    });\n  }\n\n  function submitNote(event) {\n    props.onAdd(note);\n    setNote({\n      title: \"\",\n      content: \"\"\n    });\n    event.preventDefault();\n\n    const newNote ={\n      title: note.title,\n      content: note.content,\n    }\n\n        Axios.post('https://morning-gorge-54382.herokuapp.com/save',newNote);\n  }\n  function expand() {\n    setIsClicked(true);\n  }\n\n  return (\n    <div>\n      <form className=\"create-note\">\n        {isClicked ? (\n          <input\n            name=\"title\"\n            onChange={handleChange}\n            value={note.title}\n            placeholder=\"Title\"\n          />\n        ) : null}\n        <textarea\n          name=\"content\"\n          onClick={expand}\n          onChange={handleChange}\n          value={note.content}\n          placeholder={isClicked ? \"Content\" : \"Take a note...\"}\n          rows={isClicked ? 3 : 1}\n        />\n        <Zoom in={isClicked}>\n          <Fab onClick={submitNote}>\n            <AddIcon />\n          </Fab>\n        </Zoom>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n","import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport Header from \"./components/Header\";\nimport Note from \"./components/Note\";\nimport CreateArea from \"./components/CreateArea\";\n\nfunction App() {\n\n  useEffect(()=>{\n  fetch('https://morning-gorge-54382.herokuapp.com/notes')\n.then(response => response.json())\n.then(data => setNotes(data));\n});\n\n  const [notes, setNotes] = useState([]);\n\n  function addNote(data) {}\n\n  function deleteNote(title) {\n     const remNote ={\n       title\n     }\n   Axios.post('https://morning-gorge-54382.herokuapp.com/delete',remNote);\n  }\n\n  return (\n    <div>\n      <Header />\n      <CreateArea onAdd={addNote} />\n      {notes.map((noteItem, index) => {\n        return (\n          <Note\n            key={index}\n            id={index}\n            title={noteItem.title}\n            content={noteItem.content}\n            onDelete={deleteNote}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}